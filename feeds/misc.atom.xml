<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Formally Applied - misc</title><link href="https://blog.formallyapplied.com/" rel="alternate"></link><link href="https://blog.formallyapplied.com/feeds/misc.atom.xml" rel="self"></link><id>https://blog.formallyapplied.com/</id><updated>2017-05-10T18:40:00+02:00</updated><entry><title>Building thisÂ blog</title><link href="https://blog.formallyapplied.com/2017/05/building-this-blog/" rel="alternate"></link><published>2017-05-04T10:20:00+02:00</published><updated>2017-05-10T18:40:00+02:00</updated><author><name>Ammar Ben Khadra</name></author><id>tag:blog.formallyapplied.com,2017-05-04:/2017/05/building-this-blog/</id><summary type="html">&lt;p class="first last"&gt;Details about the tools and services used in building this blog. Also, some discussion
about the design rationale behind&amp;nbsp;it.&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="in-a-nutshell"&gt;
&lt;h2&gt;In a&amp;nbsp;nutshell&lt;/h2&gt;
&lt;p&gt;This blog is powered by &lt;a class="reference external" href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; using
&lt;a class="reference external" href="https://github.com/getpelican/pelican-themes/tree/master/pelican-bootstrap3"&gt;pelican-bootstrap3&lt;/a&gt;
theme. It&amp;#8217;s hosted on &lt;a class="reference external" href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;.  Content distribution
and &lt;span class="caps"&gt;TLS&lt;/span&gt; encryption are powered by &lt;a class="reference external" href="https://www.cloudflare.com"&gt;CloudFlare&lt;/a&gt;.
In terms of cost, I had to pay only for the domain name registration.
A template of this blog is provided &lt;a class="reference external" href="https://github.com/abenkhadra/formallyapplied.template"&gt;here&lt;/a&gt;.
Basically, you only need to &lt;a class="reference external" href="http://docs.getpelican.com/en/3.7.1/install.html"&gt;install pelican&lt;/a&gt;
and you should be able of getting the template up and running in a matter of&amp;nbsp;minutes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="design-options"&gt;
&lt;h2&gt;Design&amp;nbsp;options&lt;/h2&gt;
&lt;p&gt;If you are interested in the alternative options considered when building this
blog then please read&amp;nbsp;on.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Static or dynamic blog&lt;/strong&gt;. This decision effectively means choosing between
&lt;a class="reference external" href="https://www.wordpress.com"&gt;Wordpress&lt;/a&gt; and a Static Site Generator (&lt;span class="caps"&gt;SSG&lt;/span&gt;). I won&amp;#8217;t
delve into a detailed comparison here. Quick googling should give you a sufficient idea.
Bottom line is that if you have a limited set of requirements - similar to my case -
then I recommend going for a static website.
Basically, it allows you to focus on your content and largely forget about
issues related to maintenance, security, and&amp;nbsp;performance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Choosing an &lt;span class="caps"&gt;SSG&lt;/span&gt;&lt;/strong&gt;. There are plenty of SSGs around on &lt;a class="reference external" href="https://www.staticgen.com"&gt;staticgen&lt;/a&gt;.
What ended up on my shortlist are Jekyll, Hugo, and Pelican. Jekyll is unquestionably
the most popular and is the one endorsed by GitHub. Also,
I read some nice things about Hugo particularly regarding its speed. However, I haven&amp;#8217;t
tried any of them, to be honest, and went directly for Pelican due to these reasons;
First, it is written in Python. I&amp;#8217;m learning Python already and this helps
me have more consolidation around its ecosystem. Second, Pelican comes with native
support for restructuredText which has several
&lt;a class="reference external" href="http://eli.thegreenplace.net/2017/restructuredtext-vs-markdown-for-technical-documentation/"&gt;advantages&lt;/a&gt;
over&amp;nbsp;Markdown.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Blog theme&lt;/strong&gt;. Fortunately, Pelican has a lot of &lt;a class="reference external" href="http://www.pelicanthemes.com/"&gt;themes&lt;/a&gt;
to choose from. I ended up choosing &lt;em&gt;pelican-bootstrap3&lt;/em&gt;. This theme supports
Booststrap (that is easy to guess!) and its corresponding &lt;a class="reference external" href="https://bootswatch.com/"&gt;bootswatch&lt;/a&gt; themes.
Then, I customized my own bootswatch sub-theme which is named &amp;#8220;formally&amp;#8221; based on the Sandstone sub-theme.
In this regard, I tried to follow some rules like the ones found
&lt;a class="reference external" href="https://spark.adobe.com/blog/2017/01/30/13-rules-to-help-you-stop-making-bad-font-choices/"&gt;here&lt;/a&gt;
and &lt;a class="reference external" href="https://designschool.canva.com/blog/design-rules//"&gt;here&lt;/a&gt;.
These rules seem to summarize sensible&amp;nbsp;wisdom.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, in order to apply your own customization to the provided template,
consider using &lt;a class="reference external" href="https://developers.google.com/web/tools/setup/setup-workflow"&gt;Map to Network Resource&lt;/a&gt;
which is a feature available in Chrome. This feature helps
you iterate quickly and thus saves you a lot of time in the&amp;nbsp;process&lt;/p&gt;
&lt;/div&gt;
</content><category term="blogging"></category></entry></feed>